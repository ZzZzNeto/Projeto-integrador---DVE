# Generated by Django 4.1.1 on 2023-01-10 18:10

import Login.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Announcement', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('city', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='city')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=50, verbose_name='course')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(max_length=25, verbose_name='period')),
            ],
        ),
        migrations.CreateModel(
            name='Schooling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schooling', models.CharField(max_length=50, verbose_name='schooling')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_external', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('is_internal', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Membro da equipe')),
                ('photo', models.ImageField(blank=True, default=None, null=True, upload_to='imgs/ProfilePictures/', verbose_name='Imagem do perfil')),
                ('description', models.CharField(default='Descrição', max_length=1000)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Login.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInternal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration', models.CharField(max_length=50, verbose_name='Matricula')),
                ('linkedin', models.CharField(max_length=50, verbose_name='Linkedin')),
                ('birth_date', models.DateField(null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.city')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.course')),
                ('favorites', models.ManyToManyField(related_name='favoritosInternal', to='Announcement.annoucement')),
                ('period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.period')),
                ('schooling', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.schooling')),
                ('tags', models.ManyToManyField(related_name='tagsInternal', to='Announcement.tags')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserExternal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkedin', models.CharField(max_length=50, verbose_name='Linkedin')),
                ('birth_date', models.DateField(null=True)),
                ('institution', models.CharField(default='Institution', max_length=50, verbose_name='Institution')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.city')),
                ('favorites', models.ManyToManyField(related_name='favoritosExternal', to='Announcement.annoucement')),
                ('schooling', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.schooling')),
                ('tags', models.ManyToManyField(related_name='tagsExternal', to='Announcement.tags')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCompany',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('linkedin', models.CharField(max_length=50, verbose_name='Linkedin')),
                ('whatsapp', models.CharField(max_length=50, verbose_name='Whatsapp')),
                ('instagram', models.CharField(max_length=50, verbose_name='Instagram')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('phone', models.CharField(max_length=13, verbose_name='Telefone')),
                ('cep', models.CharField(max_length=9, verbose_name='CEP')),
                ('district', models.CharField(max_length=80, verbose_name='Bairro')),
                ('street', models.CharField(max_length=80, verbose_name='Rua')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Login.city')),
            ],
        ),
    ]
